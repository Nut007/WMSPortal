@{
    Layout = Request.IsAjaxRequest() ? null : "~/Views/Shared/_Layout.cshtml";
}
<script>
    var _urlExecuteReport = '@Url.Action("ExecuteReport", "Helper")';
    var dateFields = [];
    function OnReportChange(e)
    {
        $("#gridResults").removeClass("k-grid k-widget");
        var item = $('#reports').data("kendoDropDownList");

        $("#parameterGrid").data("kendoGrid").dataSource.read();

        var outputGrid = $("#gridResults").data("kendoGrid");
        if (outputGrid)
        {
            $("#gridResults").removeData('kendoGrid');
            $("#gridResults").empty();
        }
        if (item.value() == "RPT_ADHOC") {
            $('#sqlContainer').show();
            $('#parametersContainer').hide();
            $("#sql").val("");
        }
        else {
            $('#sqlContainer').hide();
            $('#parametersContainer').show();
        }
    }

    function executeReport() {
        var outputGrid = $("#gridResults").data("kendoGrid");
        if (outputGrid) {
            kendo.ui.progress($("#gridResults"), true);
        }
        else {
            $('#load').show();
        }
        $('#btnExecuteReport').prop('disabled', true);
        var grid = $("#parameterGrid").data("kendoGrid");
        var dataSource = grid.dataSource;
        var spName = $("#reports").data("kendoDropDownList").value();
        var sql = $("#sql").val();
        var rows = JSON.stringify({ 'parameters': dataSource.data().toJSON(), 'storeprocedureName': spName, 'sql': sql });

        $.ajax({
            method: "POST",
            data: rows,
            url: _urlExecuteReport,
            contentType: "application/json; charset=utf-8",
            cache: false,
            async: true,
            success: function (data) {
                if (data.result == false) {
                    $.when(kendo.ui.ExtAlertDialog.show({
                        title: "Error",
                        message: data.error,
                        icon: "k-ext-error",
                        width: 500,
                        height: 120
                    }))
                }
                else {
                    generateGrid(data.Data);
                }
                $('#load').hide();
                $('#btnExecuteReport').prop('disabled', false);
                kendo.ui.progress($("#gridResults"), false);
            },
            error: function (err) {
                console.log('Failed to get data' + err.error);
                kendo.ui.progress($("#gridResults"), false);
                $('#btnExecuteReport').prop('disabled', false);
                $('#load').hide();
            }
        });
    }
    //in the success handler of the AJAX method call the function below with the received data:
    var dateFields = [];
    function generateGrid(gridData) {

        var outputGrid = $("#gridResults").data("kendoGrid");
        if (outputGrid) {
            $("#gridResults").empty();
        }
        
        var model = generateModel(gridData);
        
        var parseFunction;

        if (dateFields.length > 0) {
            parseFunction = function (response) {
                for (var i = 0; i < response.length; i++) {
                    for (var fieldIndex = 0; fieldIndex < dateFields.length; fieldIndex++) {
                        var record = response[i];
                        var dateValue = kendo.parseDate(record[dateFields[fieldIndex]]);
                        if (dateValue != null)
                            record[dateFields[fieldIndex]] = kendo.parseDate(record[dateFields[fieldIndex]]);
                    }
                }
                return response;
            };
        }
        
        var cols = generateColumns(gridData[0], model);

        var grid = $("#gridResults").kendoGrid({
            dataSource: {
                data: gridData,
                schema: {
                    model: model
                },
                pageSize: 200
            },
            filterable: true,
            toolbar: ["excel"],
            excel: {
                allPages: true
            },
            filterable: {
                    mode: "row"
                },
            pageable: true,
            columns: cols,
            noRecords: true,
            editable: false,
            scrollable: true,
            height: 550,
            resizable: true,
            dataBound: function (e) {
                var grid = $("#gridResults").data("kendoGrid");
                for (var i = 0; i < grid.columns.length; i++) {
                    grid.autoFitColumn(i);
                }
            }
        });
    }
    function getFirtFieldValues(data, fieldName) {
        var firstValue;
        for (var i = 0; i < data.length; i++) {
            if (data[i][fieldName] != '' && data[i][fieldName] != null) {
                firstValue = data[i][fieldName];
                return firstValue;
            }
        }
        return firstValue;
    }
    function generateModel(data) {
        var model = {};
        var fields = {};
        var gridData = data[0];

        
        for (var property in gridData) {
            var value = getFirtFieldValues(data, property)

            //var propType = typeof gridData[property];
            var propType = typeof value;
            if (propType == "number") {
                fields[property] = {
                    type: "number",
                    validation: {
                        required: true
                    }
                };
            } else if (propType == "boolean") {
                fields[property] = {
                    type: "boolean",
                    validation: {
                        required: true
                    }
                };
            } else if (propType == "string") {
                
                var parsedDate = kendo.parseDate(value);
                if (parsedDate) {
                    fields[property] = {
                        type: "date",
                        validation: {
                            required: true
                        }
                    };
                    dateFields.push(property);
                } else {
                    fields[property] = {
                        validation: {
                            required: true
                        }
                    };
                }
            } else {
                fields[property] = {
                    validation: {
                        required: true
                    }
                };
            }

        }
        model.fields = fields;

        return model;
    }

    function generateColumns(gridData,model) {
        gridColumnGeneration = [];
        var fields = {};
        for (var property in gridData) {
            //var propType = typeof gridData[property];
            var propType = model.fields[property].type
            
            if (propType == "string") {
                gridColumnGeneration.push({ title: property, field: property })
                //var parsedDate = kendo.parseDate(gridData[property]);
                //if (parsedDate) {
                //    gridColumnGeneration.push({ title: property, field: property, template: '#=kendo.toString(' + property + ',"dd/MM/yyyy")#' })
                //} else {
                //    gridColumnGeneration.push({ title: property, field: property })
                //}
            } else if (propType == "date") {
                gridColumnGeneration.push({ title: property, field: property, template: '#=kendo.toString(' + property + ',"dd/MM/yyyy")#' })
            }
            else {
                gridColumnGeneration.push({ title: property, field: property })
            }

        }

        return gridColumnGeneration;


    }
</script>
<style>
    .row-centered {
        text-align:center;
    }
</style>
<div id="content">
    <div class="form-inline margin-bottom-10">
        <div class="form-group margin-top-5">
            <label>Report Name </label>
        </div>
        <div class="form-group mx-sm-3 mb-2">
            @(Html.Kendo().DropDownList()
                .Name("reports")

                .DataTextField("PROCEDURE_NAME")
                .DataValueField("PROCEDURE_NAME")
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("GetStoreProcedureReport", "Helper");
                    });
                })
                .HtmlAttributes(new { style = "width: 400px" })
                .Events(e => e.Change("OnReportChange"))
            )
        </div>
        <input id="btnExecuteReport" type="button" value="Execute Report" onclick="executeReport()" class="btn btn-primary mb-2" />
    </div>
    <div id="parametersContainer" class="margin-bottom-10">
        @Html.Partial("_ParameterGrid")
    </div>
    <div id="sqlContainer" style="display:none" class="margin-bottom-10">
        <div class="p-4 m-2 bg-primary text-white"><span class="margin-left-5">SQL Query</span></div>
        @Html.TextArea("sql", "", new { @class = "k-textbox", style = "width: 100%;", @rows = 10 })
    </div>
    <div id="load" style="display:none" class="row-centered">
        Please wait...
        <img src="//s.svgbox.net/loaders.svg?fill=maroon&ic=tail-spin"
             style="width:24px">
    </div>
    <div id="outputContainer">
        <div id="gridResults"></div>
    </div>
    <script>
        $(document).ready(function () {
            var dropdownlist = $("#reports").data("kendoDropDownList");
            dropdownlist.select(1);
            dropdownlist.trigger("change");

        });
    </script>
</div>

